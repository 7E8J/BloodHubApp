generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum BloodType {
  A_POSITIVE
  B_POSITIVE
  O_POSITIVE
  AB_POSITIVE
  A_NEGATIVE
  B_NEGATIVE
  O_NEGATIVE
  AB_NEGATIVE
}

enum Prefix {
  Mr
  Ms
  Mrs
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id           String   @id @default(cuid())
  citizenId    String   @unique
  citizenBack  String   @unique
  prefix       String
  firstName    String
  lastName     String
  phoneNumber  String   @unique
  password     String
  dob          DateTime
  profileImage String?
  bloodType    String?
  gender       String?
  weight       Float?
  height       Float?
  disease      String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  address      Address?
  donationHistory DonationHistory[]
  post         Post[]
  bookmark     Bookmark[]
}


model Address {
  id          String  @id @default(cuid())
  houseNo     String
  moo         String
  soi         String
  subDistrict String?
  district    String?
  province    String?
  country     String?
  postcode    String?

  userId      String @unique
  user User @relation(fields: [userId], references: [id])
}

enum caseType {
  NORMAL
  EMERGENCY
}

<<<<<<< HEAD
=======
// ไม่มีรูปภาพให้เก็บ
>>>>>>> cbdda88c524b1a62ed8fa5289556ed8fa81284fd
model News {
  id          String   @id @unique @default(cuid())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleted_at  DateTime
}

model Post {
<<<<<<< HEAD
  id             String       @id @unique @default(cuid())
  image          String?
  description    String?
  phone_number   String?      @unique
  bloodType      BloodType?
  case           caseType?
  user           User?        @relation(fields: [userId], references: [id])
  userId         String       @unique
  appointment_id Appointment?
}

// model Reservation_Slots {
//   id           String    @id @unique @default(cuid())
//   reserve_date DateTime
//   reserve_time DateTime
//   created_at   DateTime  @default(now())
//   updated_at   DateTime?
//   cancelled_at DateTime?
//   place_id     String
// }
=======
  id           String     @id @unique @default(cuid())
  image        String?
  description  String
  phone_number String
  bloodType    BloodType
  case         caseType
  userId       String    
  user         User      @relation(fields: [userId], references: [id])
  appointment_id Appointment[]
  bookmark      Bookmark[]
}

model Bookmark {
  id      String @id @default(cuid())
  postId  String
  userId  String
  post    Post   @relation(fields: [postId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
}
>>>>>>> cbdda88c524b1a62ed8fa5289556ed8fa81284fd

enum AppointmentStatus {
  Pending
  Completed
  Cancelled
}

model Appointment {
  id                  String            @id @unique @default(cuid())
  status              AppointmentStatus
  created_at          DateTime          @default(now())
  cancelled_at        DateTime?
  reservation_slot_id String            @unique
  donator_id          String
<<<<<<< HEAD
  post                Post              @relation(fields: [postId], references: [id])
  postId              String            @unique
}

model Hospital {
  id           String @id @default(cuid())
  hospitalName String
  bloodNeed   BloodNeed?
}

model BloodNeed {
  id                String @id @default(cuid())
  aPositiveNeed     Int
  bPositiveNeed     Int
  oPositiveNeed     Int
  abPositiveNeed    Int
  aPositiveReceive  String
  bPositiveReceive  String
  oPositiveReceive  String
  abPositiveReceive String
  aNegativeNeed     Int
  bNegativeNeed     Int
  oNegativeNeed     Int
  abNegativeNeed    Int
  hospitalId String   @unique
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
}

// enum DonationStatus {
//   PENDING
//   APPOINTED
//   DENIED
// }
=======

  postId String @unique
  post Post @relation(fields: [postId], references: [id])
}


// แก้เป็นแต่ละ โรงพยายาบาล หรือ ทำ relation แต่ละโรงบาล

model Hospital {
  id             String   @id @default(cuid())
  hospitalName   String
  hospitalImg    String
  bloodNeed      BloodNeed?
}

model BloodNeed {
  id                 String   @id @default(cuid())
  aPositiveNeed      Int
  bPositiveNeed      Int
  oPositiveNeed      Int
  abPositiveNeed     Int
  aPositiveReceive   String
  bPositiveReceive   String
  oPositiveReceive   String
  abPositiveReceive  String
  aNegativeNeed      Int
  bNegativeNeed      Int
  oNegativeNeed      Int
  abNegativeNeed     Int
  hospitalId         String   @unique
  hospital           Hospital @relation(fields: [hospitalId], references: [id])
}
>>>>>>> cbdda88c524b1a62ed8fa5289556ed8fa81284fd


enum DonationStatus {
  PENDING
  APPOINTED
  DENIED
}

model DonationHistory {
  id         String         @id @default(cuid())
  blood_type BloodType
  status     DonationStatus
  created_at DateTime       @default(now())
  updated_at DateTime?
  deleted_at DateTime?

  userId String
  user User @relation(fields: [userId], references: [id])
}
